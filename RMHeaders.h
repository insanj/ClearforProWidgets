/*
 * This header is generated by weak_classdump 0.2
 * on Monday, April 28, 2014 at 12:35:38 PM Eastern Daylight Time
 * Operating System: Version 7.0.6 (Build 11B651)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

 @interface RMSchemePosition : NSObject {
	long long _positionType; 
	long long _positionAnchor; 
	unsigned long long _positionIndex; 
}

@property (assign,nonatomic) long long positionType;
@property (assign,nonatomic) long long positionAnchor;
@property (assign,nonatomic) unsigned long long positionIndex;
+ (id)schemePositionWithAnchor:(long long)arg1;
+ (id)schemePositionWithIndex:(unsigned long long)arg1;
- (void)setPositionType:(long long)arg1;
- (void)setPositionAnchor:(long long)arg1;
- (void)setPositionIndex:(unsigned long long)arg1;
- (id)init;
- (id)initWithIndex:(unsigned long long)arg1;
- (id)initWithAnchor:(long long)arg1;
@end

@interface RMSchemeCommand : NSObject

@property (assign,nonatomic) long long commandType;
@property (nonatomic,retain) RMSchemePosition *position;
// @property (nonatomic,retain) RMSchemeListReference* listReference;
@property (nonatomic,retain) NSString *title; 				
@property (nonatomic,retain) NSArray* items; 			
@property (nonatomic,retain) id fileContent;
@property (nonatomic,retain) NSString* appName;
@property (nonatomic,retain) NSString* callback;
+ (id)createListCommandWithPosition:(RMSchemePosition *)arg1 title:(NSString *)arg2 items:(NSArray *)arg3;
+ (id)createTaskCommandWithPosition:(RMSchemePosition *)arg1 listReference:(id)arg2 title:(NSString *)arg3;
+ (id)showListsCommand;
+ (id)openListCommand:(id)arg1;
+ (id)fileCommandWithContent:(id)arg1;
+ (id)exportCommandWithAppName:(id)arg1 callback:(id)arg2;
+ (id)importCommandWithAppName:(id)arg1 content:(id)arg2;
- (id)initWithCommandType:(long long)arg1;
- (void)setListReference:(id)arg1;
- (void)setFileContent:(id)arg1;
- (void)setCommandType:(long long)arg1;
- (void)setCallback:(NSString *)arg1;
- (void)setTitle:(NSString *)arg1;
- (void)setPosition:(RMSchemePosition *)arg1;
- (void)setItems:(NSArray &)arg1;
- (void)setAppName:(NSString *)arg1;
@end

@interface RMClearAppDelegate : UIResponder 

@property (nonatomic,retain) UIWindow* window;
// @property (nonatomic,retain) HTModelBackend* modelBackend;
// @property (nonatomic,retain) UIViewController<RMContentViewController>* contentController;
+ (void)initialize;
- (void)setModelBackend:(id)arg1;
- (_Bool)bootstrapModelWithListIdentifier:(id*)arg1;
- (void)registerDefaultsWithBlock:(id)arg1;
- (void)prepareModelBackend;
- (Class)overlaybleViewControllerClass;
- (id)makeAppViewControllerWithCommand:(id)arg1 launchError:(id)arg2; // ?
- (void)launchSetupForApplication:(id)arg1 error:(id*)arg2;
- (id)listIdentifierForContextualBadgeCount;
- (id)populateFreshBackend:(id)arg1;
- (void)transitionNotifierDidRefreshNotifications:(id)arg1;
- (void)saveStateToPersistentStorage;
- (void)cloudDataStateNotification:(id)arg1;
- (void)cloudSyncStateNotification:(id)arg1;
- (void)cloudDidRetrieveModelNotification:(id)arg1;
- (void)migrateFromBundleVersion:(long long)arg1;
- (unsigned long long)badgeCountForModel:(id)arg1;
- (void)internal_detectDirtyCloudShutdown;
- (void)internal_writeBundleVersionToDefaults;
- (void)setContentController:(id)arg1;
- (void)internal_updateActiveDates;
- (void)internal_updateAppBadgeForModel:(id)arg1;
- (void)internal_completeBackgroundFetchWithResult:(unsigned long long)arg1 model:(id)arg2;
- (void)internal_pushBackgroundFetchInterval;
- (_Bool)internal_needsBackgroundFetchInState:(unsigned long long)arg1;
- (void)internal_backgroundFetchTimerFired:(id)arg1;
- (id)init;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (void)setWindow:(UIWindow *)arg1;
- (void)application:(id)arg1 performFetchWithCompletionHandler:(id)arg2;
@end